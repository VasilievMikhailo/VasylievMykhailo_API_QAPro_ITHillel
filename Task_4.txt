'number' + 3 + 3  --> 'number33' (происходит конкатенация. JS приводит число к строке первый раз, а потом второй)

null + 3  -->  3 (null это 0, происходит сложение 0 +3)

5 && "qwerty"  --> "qwerty" (все числа, кроме 0 в JS считаются truthly, "qwerty" - это не пустая строка, оператор && возвращает последнее truthly)

+'40' + +'2' + "hillel";  --> "42hillel" (+'40' - унарный + который преобразовует строку в число, 40 +2, а после происходит конкатенація 42 + "hillel")

'10' - 5 === 6;  --> false ('10' - 5 JS приводит сторку автоматически, если возможно, к числу 10 - 5 = 5. 5 === 6 строгое сравнение без приведения типов что дает false )

true + false  --> 1 (при арифметических операциях логич. знач переобразуются в числа true =1 ; false = 0 ; 1 + 0 = 1)

'4px' - 3  --> NaN ('4px' JS не может преобразовать строку в число, поэтому '4px' = NaN ; NaN - 3 = NaN)

'4' - 3  --> 1 (сторка переобраз в число и 4 - 3 = 1, - работает только с числами)

'6' + 3 ** 0;  --> '61' (первое выполн. 3 ** 0 = 1, так как любое число в степени 0 это 1, далее конкатенация '6' + 1 = '61')

12 / '6'  --> 2 (деление работает только с числами, строка '6' приводится к числу 6)

'10' + (5 === 6);  --> '10false' (сначало то что в скобках, это false. далее конкатенация '10' + false = false)

null == ''  --> false 

3 ** (9 / 3);  --> 27 (сначало выполн то что в () = 3. 3 ** 3 = 27)

!!'false' == !!'true'  --> true

0 || '0' && 1  --> 1 (по приоритету сначало выполн. '0' && 1 = 1, так как оба truthly и возвращает 2-й truthly, тоесть 1. 0 || 1 ; 0 это falsy; 1 это truthly в итоге возвращает первое truthly)

(+null == false) < 1;  --> false  (+null == false результат true, так как +null приводится к 0, а 0 == false. true < 1 --> false)

false && true || true  --> true (false && true --> false, так как первое ложное, false || true --> первое истинное это true)

false && (false || true);  --> false  (сначало в скобках, false || true --> true. Далее false && true false, так как первое ложное)

(+null == false) < 1 ** 5;  --> false (сначало в скобках, +null == false --> true. Далее 1 ** 5 = 1. 1 < 1 ---> False)